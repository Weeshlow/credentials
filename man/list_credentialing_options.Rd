% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/credentials.R, R/readline_creds.R, R/rstudio_creds.R, R/shiny_creds.R, R/tcltk_creds.R
\name{list_credentialing_options}
\alias{get_first_available_credentialer}
\alias{get_recommended_credentialer}
\alias{is_readline_credentialing_available}
\alias{is_readline_credentialing_recommended}
\alias{is_rstudioapi_credentialing_available}
\alias{is_rstudioapi_credentialing_recommended}
\alias{is_shiny_credentialing_available}
\alias{is_shiny_credentialing_recommended}
\alias{is_tcltk_credentialing_available}
\alias{is_tcltk_credentialing_recommended}
\alias{list_credentialing_options}
\title{Determine how Credentials can be Gathered}
\usage{
list_credentialing_options()

get_recommended_credentialer()

get_first_available_credentialer(preferences)

is_readline_credentialing_available()

is_readline_credentialing_recommended()

is_rstudioapi_credentialing_available()

is_rstudioapi_credentialing_recommended()

is_shiny_credentialing_available()

is_shiny_credentialing_recommended()

is_tcltk_credentialing_available()

is_tcltk_credentialing_recommended()
}
\arguments{
\item{preferences}{Character. An ordered list of preferred credentialing options. The first
option on the list that is functional on the user's system will be used. Note that in the
event that none of the preferred options is available on a user's system, then all 
available options (per \code{\link{list_credentialing_options}}) will be tried even though
they may not appear on the preferences list.}
}
\description{
These functions interrogate the R process to determine what valid modes of asking for credentials
might be. For example the shiny app will work with R GUI and RStudio, but is somewhat cumbersome
(and maybe entirely impractical) for command line R (especially when operating over SSH).
}
\section{readline}{

Credentialing via \code{readline} is available when \code{R} is
run on a terminal (i.e., command line \code{R}). It is not recommended
when running using a GUI because it depends on system commands to 
turn off echoing of typed text - which is how it prevents passwords
from showing up in the console in plain text. This is a method of 
last resort and is only recommended when the GUI-based options are
not available.

In the case that a user is running R with a GUI and no other credentialing
options are available, then as a last resort the \code{readline} approach
can be used with a \code{plain_text} option. This at least prevents a 
user's password from persisting in a command history (e.g., if the password
were entered when calling a function) but it is exposed in plain text on the
console. If this happens a warning message will be printed explaining how
a user might go about installing a package to enable veiled password entry.
}

\section{rstudioapi}{

Credentialing via the \code{rstudioapi} package is available when \code{R} is
run using the RStudio IDE and not otherwise. It is the preferred approach if
it is available and the dependencies required for \code{shiny} credentialing
are not installed.
}

\section{Shiny}{

Shiny credentialing depends on both the \code{shiny} and \code{miniUI} packages being available.
It also requires that \code{R} is being run using a GUI (e.g., not on the command line). Shiny
is designated as the recommended option when R is run via RStudio and the necessary dependencies
are available. While this may seem odd given that there is an \code{rstudioapi} credentialing
option, the \code{shiny} option is superior in that it is the only option to provide an optional
cache password checkbox and is also the only option where the user can modify the user name input
after the function is called.
}

\section{tcltk}{

Credentialing via \code{tcltk} is available when \code{R} \code{tcltk} is available. 
This means that \code{R} was compiled with \code{tcltk} (see \code{?capabilities})
and the \code{tcltk} package is installed. One additional special check is that R
is not running under RStudio Server. This special case is needed because RStudio Server
can pass the first checks, but \code{tcltk} fails to pop up a window on top of the
web browser serving out RStudio in that case. Checking for a display is not sufficient
because R GUI reports no display but is in principle able to use \code{tcltk}. This method 
is recommended as an option when both \code{shiny} and \code{rstudioapi} approaches are 
unavailable.
}

